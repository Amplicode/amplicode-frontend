# This file was automatically generated. Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

"Mutation root"
type Mutation {
  delete_Owner(id: BigInteger): Void
  delete_Pet(id: BigInteger): Void
  delete_PetType(id: BigInteger): Void
  delete_Test(id: BigInteger): Void
  delete_Visit(id: BigInteger): Void
  update_Owner(input: OwnerInputDTOInput): OwnerDTO
  update_Pet(input: PetInputDTOInput): PetDTO
  update_PetType(input: PetTypeInputDTOInput): PetTypeDTO
  update_Test(input: TestInputDTOInput): TestDTO
  update_Visit(input: VisitInputDTOInput): VisitDTO
}

type OwnerDTO {
  address: String
  city: String
  email: String
  firstName: String
  id: BigInteger
  lastName: String
  telephone: String
}

type PetDTO {
  birthDate: Date
  id: BigInteger
  identificationNumber: String
  owner: OwnerDTO
  type: PetTypeDTO
}

type PetTypeDTO {
  id: BigInteger
  name: String
}

"Query root"
type Query {
  owner(id: BigInteger): OwnerDTO
  ownerList: [OwnerDTO]
  ownerByNamesList(filter: OwnerFilterInput): [OwnerDTO]
  petByIdentificationNumberList(identificationNumber: String): [PetDTO]
  pet(id: BigInteger): PetDTO
  petList: [PetDTO]
  petType(id: BigInteger): PetTypeDTO
  petTypeList: [PetTypeDTO]
  test(id: BigInteger): TestDTO
  testList: [TestDTO]
  visit(id: BigInteger): VisitDTO
  visitList: [VisitDTO]
}

type TestDTO {
  bigDecimal: BigDecimal
  bigInt: BigInteger
  bool: Boolean
  boolPrimitive: Boolean!
  byteArray: String
  bytePrimitive: Int!
  bytePrimitiveArray: String
  byteTest: Int
  calendar: String
  charArray: String
  charPrimitive: String!
  charPrimitiveArray: String
  character: String
  currency: String
  date: String
  dateUtil: DateTime
  doubleTest: Float
  duration: String
  floatTest: Float
  id: BigInteger
  instant: String
  intTest: Int
  localDate: Date
  localDateTime: DateTime
  localTime: Time
  locale: String
  longTest: BigInteger
  offsetDateTime: DateTime
  offsetTime: Time
  shortPrimitive: Int!
  shortTest: Int
  string: String
  time: String
  timeStamp: String
  url: String
  uuidTest: String
  zonedDateTime: DateTime
}

type Visit {
  getPet: PetDTO
}

type VisitDTO {
  description: String
  id: BigInteger
  visitEnd: DateTime
  visitStart: DateTime
}

"BigDecimal"
scalar BigDecimal

"BigInteger"
scalar BigInteger

"Date"
scalar Date

"DateTime"
scalar DateTime

"Time"
scalar Time

"Void"
scalar Void

input OwnerFilterInput {
  firstName: String
  lastName: String
}

input OwnerDTOInput {
  address: String
  city: String
  email: String
  firstName: String
  id: BigInteger
  lastName: String
  telephone: String
}

input OwnerInputDTOInput {
  address: String
  city: String
  email: String
  firstName: String
  id: BigInteger
  lastName: String
  telephone: String
}

input PetDTOInput {
  birthDate: Date
  id: BigInteger
  identificationNumber: String
  owner: OwnerDTOInput
  type: PetTypeDTOInput
}

input PetInputDTOInput {
  birthDate: Date
  id: BigInteger
  identificationNumber: String
  owner: OwnerDTOInput
  type: PetTypeDTOInput
}

input PetTypeDTOInput {
  id: BigInteger
  name: String
}

input PetTypeInputDTOInput {
  id: BigInteger
  name: String
}

input TestInputDTOInput {
  bigDecimal: BigDecimal
  bigInt: BigInteger
  bool: Boolean
  boolPrimitive: Boolean!
  byteArray: String
  bytePrimitive: Int!
  bytePrimitiveArray: String
  byteTest: Int
  calendar: String
  charArray: String
  charPrimitive: String!
  charPrimitiveArray: String
  character: String
  currency: String
  date: String
  dateUtil: DateTime
  doubleTest: Float
  duration: String
  floatTest: Float
  id: BigInteger
  instant: String
  intTest: Int
  localDate: Date
  localDateTime: DateTime
  localTime: Time
  locale: String
  longTest: BigInteger
  offsetDateTime: DateTime
  offsetTime: Time
  shortPrimitive: Int!
  shortTest: Int
  string: String
  time: String
  timeStamp: String
  url: String
  uuidTest: String
  zonedDateTime: DateTime
}

input VisitInputDTOInput {
  description: String
  id: BigInteger
  pet: PetDTOInput
  visitEnd: DateTime
  visitStart: DateTime
}
